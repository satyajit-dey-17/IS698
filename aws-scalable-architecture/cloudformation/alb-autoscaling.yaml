AWSTemplateFormatVersion: '2010-09-09'
Description: ALB + Auto Scaling Group for web servers using Launch Templates

Parameters:
  VpcId:
    Type: String
    Description: VPC where ALB & ASG will go
  PublicSubnet1:
    Type: String
    Description: First public subnet ID (AZ1)
  PublicSubnet2:
    Type: String
    Description: Second public subnet ID (AZ2)
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair
  InstanceType:
    Type: String
    Default: t3.micro
  AMIId:
    Type: AWS::EC2::Image::Id
    Description: AMI for EC2 instances
  DesiredCapacity:
    Type: Number
    Default: 2
  MinSize:
    Type: Number
    Default: 1
  MaxSize:
    Type: Number
    Default: 3

Resources:

  ## 1) The Application Load Balancer
  WebALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: web-alb
      Scheme: internet-facing
      SecurityGroups: []
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2

  ## 2) Target Group for ALB
  WebTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: web-tg
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: instance

  ## 3) Listener for ALB
  WebListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref WebALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebTargetGroup

  ## 4) Security Group for instances (HTTP + SSH)
  WebSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        # HTTP
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        # SSH
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0   # consider tightening to your IP
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0

  ## 5) Launch Template instead of Launch Configuration
  WebLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: web-launch-template
      LaunchTemplateData:
        KeyName: !Ref KeyName
        ImageId: !Ref AMIId
        InstanceType: !Ref InstanceType
        SecurityGroupIds:
          - !GetAtt WebSG.GroupId
        UserData:
          Fn::Base64: |
            #!/bin/bash
            yum install -y httpd
            systemctl enable httpd
            systemctl start httpd
            echo "<h1>Hello from $(hostname)</h1>" > /var/www/html/index.html

  ## 6) Auto Scaling Group using the Launch Template
  WebASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      LaunchTemplate:
        LaunchTemplateId: !Ref WebLaunchTemplate
        Version: !GetAtt WebLaunchTemplate.LatestVersionNumber
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      DesiredCapacity: !Ref DesiredCapacity
      TargetGroupARNs:
        - !Ref WebTargetGroup

Outputs:
  ALBDNSName:
    Value: !GetAtt WebALB.DNSName
    Description: DNS name of the load balancer

